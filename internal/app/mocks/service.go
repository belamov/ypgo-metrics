// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/belamov/ypgo-metrics/internal/app/services (interfaces: MetricServiceInterface)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockMetricServiceInterface is a mock of MetricServiceInterface interface.
type MockMetricServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockMetricServiceInterfaceMockRecorder
}

// MockMetricServiceInterfaceMockRecorder is the mock recorder for MockMetricServiceInterface.
type MockMetricServiceInterfaceMockRecorder struct {
	mock *MockMetricServiceInterface
}

// NewMockMetricServiceInterface creates a new mock instance.
func NewMockMetricServiceInterface(ctrl *gomock.Controller) *MockMetricServiceInterface {
	mock := &MockMetricServiceInterface{ctrl: ctrl}
	mock.recorder = &MockMetricServiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMetricServiceInterface) EXPECT() *MockMetricServiceInterfaceMockRecorder {
	return m.recorder
}

// UpdateCounterMetric mocks base method.
func (m *MockMetricServiceInterface) UpdateCounterMetric(arg0 context.Context, arg1 string, arg2 int64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateCounterMetric", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateCounterMetric indicates an expected call of UpdateCounterMetric.
func (mr *MockMetricServiceInterfaceMockRecorder) UpdateCounterMetric(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateCounterMetric", reflect.TypeOf((*MockMetricServiceInterface)(nil).UpdateCounterMetric), arg0, arg1, arg2)
}

// UpdateGaugeMetric mocks base method.
func (m *MockMetricServiceInterface) UpdateGaugeMetric(arg0 context.Context, arg1 string, arg2 float64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateGaugeMetric", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateGaugeMetric indicates an expected call of UpdateGaugeMetric.
func (mr *MockMetricServiceInterfaceMockRecorder) UpdateGaugeMetric(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateGaugeMetric", reflect.TypeOf((*MockMetricServiceInterface)(nil).UpdateGaugeMetric), arg0, arg1, arg2)
}
